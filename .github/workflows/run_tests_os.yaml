name: Test on OSs

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  Tests:
    name: ${{ matrix.os }} / ${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}-latest
    strategy:
      matrix:
        tf-version: [2.2.0, 2.3.0]
        os: [MacOS, Windows]  # test all OSs (except Ubuntu, which is already running other tests)
        python-version: [3.6, 3.8]  # test only the two extremes of supported Python versions

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install and Set Up Poetry
        shell: bash
        run: |
          pip install --upgrade poetry
          poetry config virtualenvs.in-project true
          poetry run python -m pip install --upgrade pip

      - name: Cache Poetry virtualenv
        uses: actions/cache@v2
        id: cache
        with:
          path: .venv
          key: poetry-${{ hashFiles('**/pyproject.toml') }}
          restore-keys: |
            poetry-${{ hashFiles('**/pyproject.toml') }}

      - name: Install Dependencies
        run: |
          yes | poetry cache clear pypi --all
          poetry install
        if: steps.cache.outputs.cache-hit != 'true'

      - name: Test with pytest 
        run: |
          poetry run python -m pytest -v --cov-report xml:coverage.xml --cov=scikeras --cov-append

      - uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./coverage.xml
          fail_ci_if_error: true
          flags: ubuntu-latest-${{ matrix.python-version }}-${{ matrix.tf-version }}
